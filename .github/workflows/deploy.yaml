name: deploying dockerized static files to EC2 instance

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t mohanapriya18/adtech-quiz:latest .

      - name: Push to Docker Hub
        run: docker push mohanapriya18/adtech-quiz:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Copy SSH Key
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Deploy Container to EC2 over SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker pull mohanapriya18/adtech-quiz:latest
          docker stop adt-quiz || true
          docker rm adt-quiz || true
          docker run -d -p 80:80 --name adt-quiz --restart unless-stopped mohanapriya18/adtech-quiz:latest
          EOF

  post-deployment:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: 📣 Notify Slack - Deployment Success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"✅ Deployment to EC2 was successful!"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: ❌ Notify Slack - Deployment Failed
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"❌ Deployment to EC2 failed!"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
